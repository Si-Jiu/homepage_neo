function generateStatsText(t, e) { return `浏览量 ${t} · 访问次数 ${e}` } async function fetchSiteStats(t = !1) { const e = "https://us.umami.is"; try { const { websiteId: a, token: n } = await getUmamiShareData(e, "BSU5nIkCNECkmjxa"), o = `${e}/api/websites/${a}/stats?startAt=0&endAt=${Date.now()}&unit=hour&timezone=${encodeURIComponent("Asia/Shanghai")}&url=%2F&compare=false`, i = await fetch(o, { headers: { "x-umami-share-token": n } }); if (!i.ok) { if (401 === i.status && !t) return clearUmamiShareCache(), fetchSiteStats(!0); throw new Error("获取统计数据失败") } const r = await i.json(), s = r.pageviews?.value || 0, m = r.visits?.value || 0, c = document.getElementById("site-stats-display"); c && (c.textContent = generateStatsText(s, m)) } catch (t) { console.error("Error fetching site stats:", t); const e = document.getElementById("site-stats-display"); e && (e.textContent = "统计不可用") } } !function (t) { const e = "umami-share-cache"; t.getUmamiShareData = function (a, n) { return t.__umamiSharePromise || (t.__umamiSharePromise = async function (t, a) { const n = localStorage.getItem(e); if (n) try { const t = JSON.parse(n); if (Date.now() - t.timestamp < 36e5) return t.value } catch { localStorage.removeItem(e) } const o = await fetch(`${t}/api/share/${a}`); if (!o.ok) throw new Error("获取 Umami 分享信息失败"); const i = await o.json(); return localStorage.setItem(e, JSON.stringify({ timestamp: Date.now(), value: i })), i }(a, n).catch((e => { throw delete t.__umamiSharePromise, e }))), t.__umamiSharePromise }, t.clearUmamiShareCache = function () { localStorage.removeItem(e), delete t.__umamiSharePromise } }(window), "loading" === document.readyState ? document.addEventListener("DOMContentLoaded", fetchSiteStats) : fetchSiteStats();
